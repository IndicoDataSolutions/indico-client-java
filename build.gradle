import com.expediagroup.graphql.plugin.gradle.config.GraphQLScalar
import com.expediagroup.graphql.plugin.gradle.config.GraphQLSerializer

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.10'
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.expediagroup.graphql' version '5.0.0-alpha.3'
}

group 'com.indico'

repositories {
    mavenCentral()
    mavenCentral()
}
archivesBaseName = "indico-client-java"
version = "4.12.0"


apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourceJar(type: Jar) {
    classifier "sources"
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier "javadoc"
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}





publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId group
            artifactId archivesBaseName
            version version

            from components.java

            artifact(sourceJar) {
                classifier = 'sources'
            }
            artifact(javadocJar) {
                classifier = 'javadoc'
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation('org.mock-server:mockserver-netty:5.8.0')
    implementation("com.expediagroup:graphql-kotlin-ktor-client:5.0.0-alpha.3")
    implementation('org.apache.logging.log4j:log4j-1.2-api:2.14.1')
    api('org.json:json:20190722')
    compileOnly("org.jetbrains:annotations:13.0")
    testCompileOnly("org.jetbrains:annotations:13.0")
}

//use with update-schema.sh to refresh graphql schema
graphqlIntrospectSchema {
    outputFile = file("${project.projectDir}/src/main/graphql/schema.graphql")
    endpoint = "https://app.indico.io/graph/api/graphql"
    headers = ["Authorization" : "Bearer " + project.getProperties().getOrDefault('graphQlToken', "")]
}


graphqlGenerateClient {
        // Boolean flag indicating whether or not selection of deprecated fields is allowed.
        allowDeprecatedFields = true
        packageName = "com.indico.generated"
        // Custom directory containing query files, defaults to src/main/resources
        queryFileDirectory = "${project.projectDir}/src/main/graphql/queries"
        // GraphQL schema file. Can be used instead of `endpoint` or `sdlEndpoint`.
        schemaFile = file("${project.projectDir}/src/main/graphql/schema.graphql")
}


test {
    useJUnitPlatform()
}
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath("com.apollographql.apollo:apollo-gradle-plugin:1.2.2")
    }
}

plugins {
    id 'java-library'
    id 'maven'
    id 'signing'
    id 'eclipse'
    id 'idea'
}

apply plugin: 'com.apollographql.android'

repositories {
    jcenter()
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

group = "com.indico"
archivesBaseName = "indico-client-java"
version = "4.0.6"

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Indico IPA Client'
                packaging 'jar'
                description 'Java client to the Indico IPA platform'
                url 'http://indico.com'
                scm {
                    connection 'scm:github.com:IndicoDataSolutions/indico-client-java.git'
                    developerConnection 'scm:github.com:IndicoDataSolutions/indico-client-java.git'
                    url 'https://github.com/IndicoDataSolutions/indico-client-java'
                }
                licenses {
                    license {
                        name 'MIT'
                        url 'https://github.com/IndicoDataSolutions/indico-client-java/blob/master/LICENSE'
                    }
                }
                developers {
                    developer {
                        id 'Indico'
                        name 'Indico Engineering'
                        email 'contact@indico.io'
                    }
                }
            }
        }
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked"
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation('org.mock-server:mockserver-netty:5.8.0')
    implementation('com.apollographql.apollo:apollo-runtime:1.2.2')
    api('org.json:json:20190722')
    compileOnly("org.jetbrains:annotations:13.0")
    testCompileOnly("org.jetbrains:annotations:13.0")  
}

apollo {
    outputPackageName = "com.indico"
}

test {
    useJUnitPlatform()
}
